# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id: Portfile 134754 2015-04-07 01:56:56Z michaelld@macports.org $

PortSystem          1.0
PortGroup           octave 1.0
PortGroup           compiler_blacklist_versions 1.0

octave.setup        interval 0.2.0
platforms           darwin
license             GPL-3+ Apache-2
maintainers         nomaintainer
description         Data types for verified computing.
long_description    ${description} The implementation of intervals in \
    inf-sup format is based on interval boundaries represented by \
    binary64 numbers and is standard conforming to IEEE 1788.

checksums           rmd160 2d1cb788258ad3550b61d523bb3761a052710014 \
                    sha256 86bb97d9e02059c9ed0eadfb5fbf6f4cd7d70444fa325643c69e7114a84a274a

depends_lib-append  port:mpfr port:gmp

patchfiles-append \
    patch-src_Makefile.diff \
    patch-src_mpfr_function_d.cc.diff

# octave-interval requires <cfenv>, which is part of C++0x and newer.
# require c++11

if {${configure.cxx_stdlib} eq "libstdc++"} {

    # *clang* when using libstdc++ do not seem to support C++11;
    # C++11 support seems to need GCC 4.7+ when using libstdc++;
    # could use C++0x support on GCC4.[56], but just ignore it since
    # there are newer compilers already in place as defaults.

    # Blacklist GCC compilers not supporting C++11 and all CLANG.
    # This is probably not necessary, but it's good practice.

    compiler.blacklist-append *clang* {*gcc-3*} {*gcc-4.[0-6]}

    # and whitelist those we do want to use. wish there were a better way.
    # these will be used in the order provided.

    compiler.whitelist macports-gcc-4.9 macports-gcc-4.8 macports-gcc-4.7

} else {

    # using libc++;
    # Blacklist Clang not supporting C++11 in some form and all GCC.

    compiler.blacklist-append *gcc* {clang < 500}

}
