# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 128085 2014-11-12 23:01:43Z mojca@macports.org $

PortSystem          1.0
PortGroup           elisp           1.0
PortGroup           texlive         1.0
PortGroup           xcodeversion    1.0
PortGroup           wxWidgets       1.0

name                gnuplot
version             5.0.0
subport             gnuplot-4.6 {
    version         4.6.6
}

categories          math science
# the license has some inconvenient requirements that we're not meeting
# to be allowed to distribute binaries
license             Restrictive
# luckily nothing has to link against this
installs_libs       no
platforms           darwin
maintainers         mojca openmaintainer

description         A command-driven interactive function plotting program

long_description    Gnuplot is a command-driven interactive function \
                    plotting program. Plots any number of functions, \
                    built up of C operators, C library functions, and \
                    some things C does not have like **, sgn(), etc. \
                    Also support for plotting data files, to compare \
                    actual data to theoretical curves.

homepage            http://gnuplot.sourceforge.net/
master_sites        sourceforge:project/gnuplot/gnuplot/${version}
dist_subdir         ${name}/${version}

if {${subport} eq ${name}} {
    conflicts       gnuplot-4.6

    checksums       rmd160  e91ae15d1b50110d323450be451db5d180917f4d \
                    sha256  417d4bc5bc914a60409bb75cf18dd14f48b07f53c6ad3c4a4d3cd9a8d7370faf

    depends_lib-append \
                    port:libcaca
    configure.args-append \
                    --with-caca=${prefix} \
                    --with-cwdrc \
                    --without-qt \

    variant qt conflicts qt5 description "Enable qt terminal with Qt 4" {
        depends_lib-append          port:qt4-mac
        configure.args-replace      --without-qt --with-qt=qt4
    }

    variant qt5 conflicts qt description "Enable qt terminal with Qt 5" {
        depends_lib-append          port:qt5-mac
        # TODO: this is a workaround for a bug, either in gnuplot or in qt5 packaging on Mac
        configure.ldflags-append    "-F${frameworks_dir}"
        configure.cxxflags-append   "-F${frameworks_dir}" \
                                    "-I${frameworks_dir}/QtCore.framework/Versions/5/Headers" \
                                    "-I${frameworks_dir}/QtGui.framework/Versions/5/Headers" \
                                    "-I${frameworks_dir}/QtNetwork.framework/Versions/5/Headers" \
                                    "-I${frameworks_dir}/QtSvg.framework/Versions/5/Headers" \
                                    "-I${frameworks_dir}/QtWidgets.framework/Versions/5/Headers"

        configure.args-replace      --without-qt --with-qt=qt5
    }

} elseif {${subport} eq "gnuplot-4.6"} {
    conflicts       ${name}

    distfiles-append \
                    ${name}.pdf
    extract.only    ${distname}.tar.gz

    checksums       ${distname}.tar.gz \
                    rmd160  eb1185c94d93d19b272311c71d93ba3402eea030 \
                    sha256  1f19596fd09045f22225afbfec11fa91b9ad1d95b9f48406362f517d4f130274 \
                    ${name}.pdf \
                    rmd160  659b2bba04077c3b048b6e501dde870e9f62d413 \
                    sha256  b26ebf783ef9422856b9be5e8904e7901708baee5c7e86a6bf2dab71de8f9100

    patchfiles      patch-configure-aquaterm.diff

    configure.args-append \
                    --without-lisp-files

    variant emacs description "An emacs mode for working with gnuplot" {
        depends_build-append    port:${emacs_binary_provider}
        configure.env-append    EMACS=${emacs_binary}
        configure.args-delete   --without-lisp-files
        configure.args-append   --with-lisp-files --with-lispdir=${emacs_lispdir}
    }

    variant qt description "Enable qt terminal" {
        depends_lib-append      port:qt4-mac
        configure.args-append   --enable-qt
    }
}

depends_build       path:bin/pkg-config:pkgconfig

depends_lib-append  port:expat \
                    port:fontconfig \
                    port:gd2 \
                    port:jpeg \
                    port:libcerf \
                    port:libiconv \
                    port:libpng \
                    port:ncurses \
                    port:readline \
                    port:zlib

minimum_xcodeversions \
                    {9 3.1}

configure.args-append \
                    --with-readline=${prefix} \
                    --with-gd=${prefix} \
                    --without-aquaterm \
                    --without-x \
                    --infodir='\${prefix}/share/info' \
                    --mandir='\${prefix}/share/man' \
                    --without-lisp-files \
                    --disable-wxwidgets \
                    --without-bitmap-terminals \
                    --without-cairo \
                    --without-latex \
                    --without-lua \
                    --without-pdf \
                    --without-tutorial

variant aquaterm description "Enable AquaTerm terminal" {
    depends_lib-append      port:aquaterm
    configure.args-delete   --without-aquaterm
    # TODO: fix the patch for 4.6 to make the arguments compatible with each other
    if {${subport} eq ${name}} {
        configure.cflags-append     "-F${frameworks_dir}"
        configure.ldflags-append    "-F${frameworks_dir}"
        configure.args-append       --with-aquaterm
    } else {
        configure.args-append       --with-aquaterm=${frameworks_dir}
    }
}

variant x11 {
    configure.args-delete   --without-x
    configure.args-append   --with-x
    depends_lib-append      port:xpm
}

variant luaterm description "Enable lua-based terminals" {
    depends_lib-append      port:lua
    configure.args-delete   --without-lua
    configure.args-append   --with-lua
}

variant pangocairo description "Enable cairo-based terminals" {
    configure.args-delete   --without-cairo
}

variant pdflib description "Enable pdflib-based pdf terminal" {
    depends_lib-append      port:pdflib
    configure.args-replace  --without-pdf --with-pdf=${prefix}
}

variant wxwidgets description "Enable wxt terminal" {
    wxWidgets.use           wxWidgets-3.0
    depends_lib-append      port:${wxWidgets.port}
    configure.args-delete   --disable-wxwidgets
    if {${subport} eq ${name}} {
        configure.args-append   --with-wx=${wxWidgets.wxdir}
    } else {
        configure.args-append   --with-wx-config=${wxWidgets.wxdir}
    }
}


# Ideally one would enable just PMB by default, but '--with-bitmap-terminals'
# enables lots of other obsolete terminals which clutter the output of 'set term'.
variant old_bitmap_terminals description "Enable PBM (Portable Bit Map) and other older bitmap terminals" {
    configure.args-delete   --without-bitmap-terminals
    configure.args-append   --with-bitmap-terminals
}

default_variants            +aquaterm +luaterm +pangocairo +wxwidgets +x11

if {[variant_isset pangocairo] || [variant_isset wxwidgets]} {
    depends_lib-append      path:lib/pkgconfig/pango.pc:pango
}

# Building and installing TeX macro files for TikZ could/should be done by gnuplot's Makefile,
# but without a patch that would require a dependency on texlive.
# Apart from that the files would fly to the wrong place in TDS,
# so that plain TeX and ConTeXt could not find them (an upstream bug).
# So we 'manually' generate and copy the necessary files.
post-build {
    if {[variant_isset luaterm]} {
        system -W ${worksrcpath}/share/LaTeX "${prefix}/bin/lua ../../term/lua/gnuplot-tikz.lua style"
    }
}

post-destroot {
    if {[variant_isset luaterm]} {
        set texmf ${destroot}${texlive_texmfports}
        set luadir ${worksrcpath}/share/LaTeX
        xinstall -d -m 0755 ${texmf}/tex/context/third/gnuplot-lua-tikz
        xinstall -d -m 0755 ${texmf}/tex/generic/gnuplot-lua-tikz
        xinstall -d -m 0755 ${texmf}/tex/latex/gnuplot-lua-tikz
        xinstall -d -m 0755 ${texmf}/tex/plain/gnuplot-lua-tikz

        xinstall -m 0644 ${luadir}/t-gnuplot-lua-tikz.tex      ${texmf}/tex/context/third/gnuplot-lua-tikz
        xinstall -m 0644 ${luadir}/gnuplot-lua-tikz-common.tex ${texmf}/tex/generic/gnuplot-lua-tikz
        xinstall -m 0644 ${luadir}/gnuplot-lua-tikz.sty        ${texmf}/tex/latex/gnuplot-lua-tikz
        xinstall -m 0644 ${luadir}/gnuplot-lua-tikz.tex        ${texmf}/tex/plain/gnuplot-lua-tikz
    }

    set destdocdir ${destroot}${prefix}/share/doc/${name}
    xinstall -d -m 0755 ${destdocdir}
    if {${subport} eq ${name}} {
        xinstall -m 0644 ${worksrcpath}/docs/${name}.pdf ${destdocdir}
    } else {
        xinstall -m 0644 ${distpath}/${name}.pdf ${destdocdir}
    }

    # copy demo files
    file copy ${worksrcpath}/demo ${destdocdir}
    foreach {makefile} {Makefile Makefile.in Makefile.am Makefile.am.in} {
        delete ${destdocdir}/demo/${makefile}
    }
}
