--- core/Storage.cc.orig	2025-07-31 14:28:34
+++ core/Storage.cc	2025-08-14 13:53:17
@@ -43,13 +43,13 @@
 	rset_t    rat_set;
 
    // Simple pool for memory allocation.
-	std::pmr::unsynchronized_pool_resource                pool;
-	
+	std::experimental::pmr::unsynchronized_pool_resource                pool;
+
 	long to_long(multiplier_t mul)
 		{
 		if(!mul.is_rational())
 			throw ConsistencyException("Cannot convert double to long.");
-		
+
 		return mul.get_rational().get_num().get_si();
 		}
 
--- core/Storage.hh.orig	2025-07-31 14:28:34
+++ core/Storage.hh	2025-08-14 13:09:51
@@ -31,7 +31,7 @@
 #include <assert.h>
 #include <initializer_list>
 #include <variant>
-#include <memory_resource>
+#include <experimental/memory_resource>
 
 #include "tree.hh"
 #include "Multiplier.hh"
@@ -165,8 +165,8 @@
 
 //	typedef tree<str_node, std::pmr::polymorphic_allocator<tree_node_<str_node>>> cdb_tree;
 //	extern std::pmr::polymorphic_allocator<tree_node_<str_node>> alloc;
-	typedef tree<str_node, std::pmr::polymorphic_allocator<tree_node_<str_node>>> cdb_tree;
-	
+	typedef tree<str_node, std::experimental::pmr::polymorphic_allocator<tree_node_<str_node>>> cdb_tree;
+
 	class Ex : public std::enable_shared_from_this<Ex>, public cdb_tree {
 		public:
 			Ex();
