--- src/martinez.h.orig	2024-03-16 17:56:04
+++ src/martinez.h	2025-05-03 09:12:59
@@ -37,7 +37,7 @@
 	enum PolygonType { SUBJECT, CLIPPING };
 
 	struct SweepEvent;
-	struct SegmentComp : public binary_function<SweepEvent*, SweepEvent*, bool> { // for sorting edges in the sweep line
+	struct SegmentComp : public std::function<bool(SweepEvent*, SweepEvent*)> { // for sorting edges in the sweep line
 		bool operator() (SweepEvent* e1, SweepEvent* e2) const;
 	};
 	
@@ -64,7 +64,7 @@
 	
 	static void print (SweepEvent& e); // This function is intended for debugging purposes
 
-	struct SweepEventComp : public binary_function<SweepEvent*, SweepEvent*, bool> { // for sortening events
+	struct SweepEventComp : public std::function<bool(SweepEvent*, SweepEvent*)> { // for sortening events
 		bool operator() (SweepEvent* e1, SweepEvent* e2) const;
 	};
 
--- src/polygon.cpp.orig	2024-03-16 17:56:04
+++ src/polygon.cpp	2025-05-03 09:14:28
@@ -93,7 +93,7 @@
 
 namespace { // start of anonymous namespace
 	struct SweepEvent;
-	struct SegmentComp : public binary_function<SweepEvent*, SweepEvent*, bool> {
+	struct SegmentComp : public std::function<bool(SweepEvent*, SweepEvent*)> {
 		bool operator() (SweepEvent* e1, SweepEvent* e2) const;
 	};
 
@@ -116,7 +116,7 @@
 		bool above (const Point& x) const { return !below (x); }
 	};
 
-	struct SweepEventComp : public binary_function<SweepEvent*, SweepEvent*, bool> {
+	struct SweepEventComp : public std::function<bool(SweepEvent*, SweepEvent*)> {
 		bool operator() (SweepEvent* e1, SweepEvent* e2) const {
 			if (e1->p.x < e2->p.x) // Different x coordinate
 				return true;
