# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 133907 2015-03-15 18:30:05Z ryandesign@macports.org $

PortSystem              1.0
PortGroup               cmake 1.0

name                    doxygen
version                 1.8.10
categories              textproc devel
maintainers             css openmaintainer
license                 GPL-2
description             Documentation system for several programming languages
long_description        It can generate an on-line documentation browser \
                        (in HTML) and/or an off-line reference manual \
                        from a set of documented source files. There is \
                        also support for generating output in RTF \
                        (MS-Word), PostScript, hyperlinked PDF, \
                        compressed HTML, and Unix man pages. The \
                        documentation is extracted directly from the \
                        sources, which makes it much easier to keep the \
                        documentation consistent with the source code. \
                        You can configure doxygen to extract the code \
                        structure from undocumented source files. This \
                        is very useful to quickly find your way in large \
                        source distributions. You can also visualize the \
                        relations between the various elements by means \
                        of include dependency graphs, inheritance \
                        diagrams, and collaboration diagrams, which are \
                        all generated automatically.

platforms               darwin

homepage                http://www.doxygen.org/
master_sites            http://ftp.stack.nl/pub/users/dimitri/ \
                        ftp://ftp.stack.nl/pub/users/dimitri/
distfiles               ${distname}.src${extract.suffix}

checksums               ${distname}.src${extract.suffix} \
                        rmd160  be064f0e8f00e6e20ed7c128f595e7010be1f23a \
                        sha256  cedf78f6d213226464784ecb999b54515c97eab8a2f9b82514292f837cf88b93

depends_build-append    bin:perl:perl5 \
                        bin:python2.7:python27 \
                        port:flex \
                        port:bison
license_noconflict      perl5 python27

depends_lib             port:libpng

post-extract {
    # Use our flex
    delete ${worksrcpath}/src/ce_lex.cpp
    delete ${worksrcpath}/src/code.cpp
    delete ${worksrcpath}/src/commentcnv.cpp
    delete ${worksrcpath}/src/commentscan.cpp
    delete ${worksrcpath}/src/config.cpp
    delete ${worksrcpath}/src/declinfo.cpp
    delete ${worksrcpath}/src/defargs.cpp
    delete ${worksrcpath}/src/doctokenizer.cpp
    delete ${worksrcpath}/src/fortrancode.cpp
    delete ${worksrcpath}/src/fortranscanner.cpp
    delete ${worksrcpath}/src/pre.cpp
    delete ${worksrcpath}/src/pycode.cpp
    delete ${worksrcpath}/src/pyscanner.cpp
    delete ${worksrcpath}/src/scanner.cpp
    delete ${worksrcpath}/src/tclscanner.cpp
    delete ${worksrcpath}/src/vhdlcode.cpp
    delete ${worksrcpath}/src/vhdlscanner.cpp

    # Use our bison
    delete ${worksrcpath}/src/ce_parse.cpp
    delete ${worksrcpath}/src/ce_parse.h
    delete ${worksrcpath}/src/vhdlparser.cpp
    delete ${worksrcpath}/src/vhdlparser.h
}

post-configure {
    # Use OS, not MacPorts libiconv, as MacPorts libiconv is missing required symbols.
	system "cd ${worksrcpath} && patch -p0 < ${filespath}/patch-libiconv.diff"
}

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}

destroot.args           INSTALL=${prefix} \
                        DOCDIR=${prefix}/share/doc/doxygen \
                        MAN1DIR=share/man/man1

variant docs description {Include the doxygen HTML and PDF documentation} {
    configure.args-append   -Dbuild_doc=YES

    depends_build-append    path:bin/dot:graphviz
    build.target-append     docs
    use_parallel_build      no

    destroot.target-append  install_docs
}

variant wizard description {Include the GUI wizard based on Qt4} {
    # use the Qt4 PortGroup, which provides a bunch of variables
    # and defines for how Qt4 was installed
    PortGroup qt4 1.0

    # tell configure to make the wizard app
    configure.args-append   -Dbuild_wizard=YES

    # on Macs, qmake builds .app directories; when installing, copy
    # this directory to the correct location (via the reinplace below).
    patchfiles-append       patch-addon_doxywizard_Makefile.in.diff

    post-patch {
        # allow for universal building, if desired
        reinplace "/CONFIG/s@x86@${qt_arch_types}@" \
            ${worksrcpath}/addon/doxywizard/doxywizard.pro.in

        # give doxywizard the more mac-like name of DoxyWizard
        reinplace "/^TARGET\[\[:space:\]\]/s%=.*%= DoxyWizard%" \
            ${worksrcpath}/addon/doxywizard/doxywizard.pro.in

        # fix final install location
        reinplace "s|__APPLICATIONS_DIR__|${applications_dir}|" \
            ${worksrcpath}/addon/doxywizard/Makefile.in

        # use the correct QMAKE command; the other should work, but
        # this one is guaranteed to.
        reinplace "s|QMAKE=qmake|QMAKE=${qt_qmake_cmd}|g" \
            ${worksrcpath}/addon/doxywizard/Makefile.in
    }

    post-destroot {
        # allow doxywizard to be called from the command line
        ln -s ${applications_dir}/DoxyWizard.app/Contents/MacOS/DoxyWizard ${destroot}${prefix}/bin/doxywizard
    }
}

livecheck.type          regex
livecheck.url           http://www.stack.nl/~dimitri/doxygen/download.html
livecheck.regex         {latest version of doxygen is (\d+(?:\.\d+)*)}
